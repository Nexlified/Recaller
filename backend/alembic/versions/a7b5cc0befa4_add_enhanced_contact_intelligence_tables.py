"""Add enhanced contact intelligence tables

Revision ID: a7b5cc0befa4
Revises: 002
Create Date: 2025-08-12 11:07:56.780660

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a7b5cc0befa4'
down_revision = '002'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('organization_type', sa.String(), nullable=False),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_index(op.f('ix_organizations_tenant_id'), 'organizations', ['tenant_id'], unique=False)
    op.create_table('social_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('group_type', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_social_groups_id'), 'social_groups', ['id'], unique=False)
    op.create_index(op.f('ix_social_groups_tenant_id'), 'social_groups', ['tenant_id'], unique=False)
    op.create_table('contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('education_level', sa.String(), nullable=True),
    sa.Column('graduation_year', sa.Integer(), nullable=True),
    sa.Column('alma_mater_id', sa.Integer(), nullable=True),
    sa.Column('current_organization_id', sa.Integer(), nullable=True),
    sa.Column('current_position', sa.String(), nullable=True),
    sa.Column('career_stage', sa.String(), nullable=True),
    sa.Column('industry_experience', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('primary_social_group_id', sa.Integer(), nullable=True),
    sa.Column('personality_type', sa.String(), nullable=True),
    sa.Column('communication_preference', sa.String(), nullable=True),
    sa.Column('preferred_communication_time', sa.String(), nullable=True),
    sa.Column('life_stage', sa.String(), nullable=True),
    sa.Column('relationship_status', sa.String(), nullable=True),
    sa.Column('has_children', sa.Boolean(), nullable=True),
    sa.Column('children_count', sa.Integer(), nullable=True),
    sa.Column('children_ages', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('hobbies', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('conversation_topics', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('languages_spoken', sa.String(), nullable=True),
    sa.Column('dietary_restrictions', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('preferred_meeting_type', sa.String(), nullable=True),
    sa.Column('connection_strength', sa.Integer(), nullable=True),
    sa.Column('connection_source', sa.String(), nullable=True),
    sa.Column('mutual_connections_count', sa.Integer(), nullable=True),
    sa.Column('interaction_frequency_goal', sa.String(), nullable=True),
    sa.Column('last_meaningful_interaction', sa.Date(), nullable=True),
    sa.Column('interaction_quality_trend', sa.String(), nullable=True),
    sa.Column('total_interactions', sa.Integer(), nullable=True),
    sa.Column('digital_interactions', sa.Integer(), nullable=True),
    sa.Column('in_person_interactions', sa.Integer(), nullable=True),
    sa.Column('events_attended_together', sa.Integer(), nullable=True),
    sa.Column('avg_response_time_hours', sa.Integer(), nullable=True),
    sa.Column('follow_up_frequency', sa.Integer(), nullable=True),
    sa.Column('last_follow_up_date', sa.Date(), nullable=True),
    sa.Column('next_suggested_contact_date', sa.Date(), nullable=True),
    sa.Column('follow_up_urgency', sa.String(), nullable=True),
    sa.Column('important_dates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('reminder_preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('networking_value', sa.String(), nullable=True),
    sa.Column('collaboration_potential', sa.String(), nullable=True),
    sa.Column('referral_potential', sa.String(), nullable=True),
    sa.Column('influence_level', sa.String(), nullable=True),
    sa.Column('relationship_notes', sa.Text(), nullable=True),
    sa.Column('conversation_history_summary', sa.Text(), nullable=True),
    sa.Column('shared_experiences', sa.Text(), nullable=True),
    sa.Column('mutual_interests', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('contact_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('engagement_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('priority_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('relationship_trend', sa.String(), nullable=True),
    sa.Column('last_ai_analysis', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sharing_preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('data_sensitivity', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['alma_mater_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['current_organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['primary_social_group_id'], ['social_groups.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contacts_email'), 'contacts', ['email'], unique=False)
    op.create_index(op.f('ix_contacts_id'), 'contacts', ['id'], unique=False)
    op.create_index(op.f('ix_contacts_tenant_id'), 'contacts', ['tenant_id'], unique=False)
    op.create_table('contact_ai_insights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('insight_type', sa.String(), nullable=True),
    sa.Column('insight_category', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('actionable_suggestion', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('ai_model_version', sa.String(), nullable=True),
    sa.Column('data_sources', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('user_feedback', sa.String(), nullable=True),
    sa.Column('insight_date', sa.Date(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('dismissed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_ai_insights_contact_id'), 'contact_ai_insights', ['contact_id'], unique=False)
    op.create_index(op.f('ix_contact_ai_insights_id'), 'contact_ai_insights', ['id'], unique=False)
    op.create_index(op.f('ix_contact_ai_insights_insight_type'), 'contact_ai_insights', ['insight_type'], unique=False)
    op.create_index(op.f('ix_contact_ai_insights_priority'), 'contact_ai_insights', ['priority'], unique=False)
    op.create_table('contact_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(), nullable=False),
    sa.Column('interaction_method', sa.String(), nullable=True),
    sa.Column('interaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('initiated_by', sa.String(), nullable=True),
    sa.Column('interaction_quality', sa.Integer(), nullable=True),
    sa.Column('topics_discussed', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('mood_assessment', sa.String(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('key_takeaways', sa.Text(), nullable=True),
    sa.Column('follow_up_needed', sa.Boolean(), nullable=True),
    sa.Column('follow_up_notes', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('private_notes', sa.Text(), nullable=True),
    sa.Column('attachments', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_interactions_contact_id'), 'contact_interactions', ['contact_id'], unique=False)
    op.create_index(op.f('ix_contact_interactions_id'), 'contact_interactions', ['id'], unique=False)
    op.create_index(op.f('ix_contact_interactions_interaction_date'), 'contact_interactions', ['interaction_date'], unique=False)
    op.create_table('contact_relationship_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('connection_strength', sa.Integer(), nullable=True),
    sa.Column('engagement_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('priority_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('relationship_trend', sa.String(), nullable=True),
    sa.Column('score_date', sa.Date(), nullable=False),
    sa.Column('calculation_method', sa.String(), nullable=True),
    sa.Column('factors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('manual_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_relationship_scores_contact_id'), 'contact_relationship_scores', ['contact_id'], unique=False)
    op.create_index(op.f('ix_contact_relationship_scores_id'), 'contact_relationship_scores', ['id'], unique=False)
    op.create_index(op.f('ix_contact_relationship_scores_score_date'), 'contact_relationship_scores', ['score_date'], unique=False)
    op.drop_constraint(op.f('uq_users_email'), 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_users_email'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_contact_relationship_scores_score_date'), table_name='contact_relationship_scores')
    op.drop_index(op.f('ix_contact_relationship_scores_id'), table_name='contact_relationship_scores')
    op.drop_index(op.f('ix_contact_relationship_scores_contact_id'), table_name='contact_relationship_scores')
    op.drop_table('contact_relationship_scores')
    op.drop_index(op.f('ix_contact_interactions_interaction_date'), table_name='contact_interactions')
    op.drop_index(op.f('ix_contact_interactions_id'), table_name='contact_interactions')
    op.drop_index(op.f('ix_contact_interactions_contact_id'), table_name='contact_interactions')
    op.drop_table('contact_interactions')
    op.drop_index(op.f('ix_contact_ai_insights_priority'), table_name='contact_ai_insights')
    op.drop_index(op.f('ix_contact_ai_insights_insight_type'), table_name='contact_ai_insights')
    op.drop_index(op.f('ix_contact_ai_insights_id'), table_name='contact_ai_insights')
    op.drop_index(op.f('ix_contact_ai_insights_contact_id'), table_name='contact_ai_insights')
    op.drop_table('contact_ai_insights')
    op.drop_index(op.f('ix_contacts_tenant_id'), table_name='contacts')
    op.drop_index(op.f('ix_contacts_id'), table_name='contacts')
    op.drop_index(op.f('ix_contacts_email'), table_name='contacts')
    op.drop_table('contacts')
    op.drop_index(op.f('ix_social_groups_tenant_id'), table_name='social_groups')
    op.drop_index(op.f('ix_social_groups_id'), table_name='social_groups')
    op.drop_table('social_groups')
    op.drop_index(op.f('ix_organizations_tenant_id'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###
